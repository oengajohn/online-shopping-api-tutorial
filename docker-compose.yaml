services:

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: generic
      MYSQL_DATABASE: generic
      MYSQL_USER: generic
      MYSQL_PASSWORD: generic
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db-scripts:/usr/db-scripts
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: generic
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8081:80
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    container_name: 'mongodb' 
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: generic
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=generic
      - ME_CONFIG_MONGODB_URL=mongodb://root:generic@mongodb:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
    links:
      - mongodb
    restart: unless-stopped
    ports:
      - "8082:8081"
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: generic
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - postgresdb-data:/data/db
    ports:
      - 5432:5432
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8083:8080
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    restart: always
    ports:
      - 9411:9411
  redis:
    image:  redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=generic
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
  elasticsearch:
    image: elasticsearch:8.12.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - test_data:/usr/share/elasticsearch/data/
      - ./elk-config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
    networks:
      - elk
  logstash:
    image: logstash:8.12.2
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./elk-config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elk-config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ls_data:/usr/share/logstash/data

    networks:
      - elk
    links:
      - elasticsearch
  kibana:
    image: kibana:8.12.2
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./elk-config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - kb_data:/usr/share/kibana/data
    networks:
      - elk
    links:
      - elasticsearch
  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8084:8080
      - 50000:50000
    container_name: 'jenkins'
    volumes:
      - /home/${myname}/jenkins_compose_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
  

networks:
  elk:
    driver: bridge
volumes:
  mysql_data:
  mongodb-data:
  postgresdb-data:
  test_data:
  ls_data:
  kb_data:
